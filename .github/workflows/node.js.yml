# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Publish The App Live

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Setup Node js
        uses: actions/setup-node@v2
        with: 
          node-version: '14'

      - name: Install Dependnecies
        run: npm install

      - name: build
        run: npm run build

  test: 
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v2

      - name: Setup Node js
        uses: actions/setup-node@v2
        with: 
          node-version: '14'

      - name: Install dependencies
        run: npm install
      
      - name: Test
        run: npm test

  deploy:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps: 
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login into Docker Hub
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, label) for Docker
        uses: docker/setup-buildx-action@v3
        
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with: 
          context: .
          push: true
          tags: devanand022/event-management:latest

      - name: SSH Deploy to Server
        uses: appleboy/ssh-action@master
        with: 
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: $${{ secrets.SERVER_PASSWORD }}
          script: |
            docker pull devanand022/event-management:latest 
            docker-compose up -d
